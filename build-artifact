#!/usr/bin/env bash

function join_by {
  local d=${1-} f=${2-}
  if shift 2; then
    printf %s "$f" "${@/#/$d}"
  fi
}

echo "Evaluating Version Information"
R_MASTER_VERSION=$(git tag -l -n0 --points-at main)
echo "Latest Tag: $R_MASTER_VERSION"
IFS='.' read -ra OCTET <<< "$R_MASTER_VERSION"
VERSION_OCTETS=()
for i in "${OCTET[@]}"; do
  VERSION_OCTETS+=( "$i" )
done
VERSION_OCTETS[2]=$((VERSION_OCTETS[2] + 1))
MASTER_VERSION=$(join_by . "${VERSION_OCTETS[@]}")
echo "Master Version: $MASTER_VERSION"
BUILD_VERSION=${MASTER_VERSION}
ROOT_DIR=$(pwd)

echo "Build Version: $BUILD_VERSION"

if [ -f ${ROOT_DIR}/build/packaging.log ]; then
    rm ${ROOT_DIR}/build/packaging.log
fi
mkdir -p ${ROOT_DIR}/build
if [[ ! -f ${ROOT_DIR}/build/factorio-events-logger_${BUILD_VERSION}.zip ]]; then
    ROOT_DIR=$(pwd)
    mkdir -p ${ROOT_DIR}/build/events-logger_${BUILD_VERSION}
    cp ${ROOT_DIR}/*.lua ${ROOT_DIR}/*.json ${ROOT_DIR}/*.png ${ROOT_DIR}/build/events-logger_${BUILD_VERSION}/.
    cd ${ROOT_DIR}/build || exit 1
    echo "Creating Build Artifact"
    sed -i "s/@@VERSION@@/${BUILD_VERSION}/g" events-logger_${BUILD_VERSION}/info.json
    7z a ${ROOT_DIR}/build/events-logger_${BUILD_VERSION}.zip events-logger_${BUILD_VERSION}
    RC=$?
    cd ${ROOT_DIR} || exit 1
    if [[ $RC -ne 0 ]]; then
        echo "Failed to Create Build Artifact"
        cat ${ROOT_DIR}/build/packaging.log
        exit $RC
    else
        echo "Build Artifact Created"
        rm -rf ${ROOT_DIR}/build/events-logger_${BUILD_VERSION}
        exit 0
    fi
else
    echo "Build Artifact Already Exists"
    exit 2
fi
